class solve {
    public boolean isSafe(boolean graph[][], int[] color, int v, int n, int c) {
        for (int i = 0; i < n; i++) {
            if (graph[v][i] && color[i] == c) {
                return false;
            }
        }
        return true;
    }

    public boolean solve(boolean graph[][], int[] color, int m, int n, int v) {
        if (v == n) {
            return true;
        }
        
        for (int c = 1; c <= m; c++) {
            if (isSafe(graph, color, v, n, c)) {
                color[v] = c;
                
                if (solve(graph, color, m, n, v + 1)) {
                    return true;
                }
                
                color[v] = 0;
            }
        }
        return false;
    }

    public boolean graphColoring(boolean graph[][], int m, int n) {
        int[] color = new int[n];
        return solve(graph, color, m, n, 0);
    }
}
