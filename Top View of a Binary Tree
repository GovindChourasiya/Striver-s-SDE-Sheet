class Pair{
    Node root;
    int idx;
    Pair(Node root, int idx){
        this.root = root;
        this.idx = idx;
    }
}

class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        // add your code
        ArrayList<Integer> list = new ArrayList<>();
        Map<Integer,Integer> map = new TreeMap<>();
        Queue<Pair> que = new LinkedList<>();
        
        que.add(new Pair(root,0));
        
        while(!que.isEmpty()){
            Pair obj = que.poll();
            Node node = obj.root;
            int idx = obj.idx;
            
            if(!map.containsKey(node)){
                map.put(idx,node.data);
            }
            
            if(node.left != null){
                que.add(new Pair(node.left,idx-1));
            }
            if(node.right != null){
                que.add(new Pair(node.right,idx+1));
            }
            
        }
        for(Integer val : map.values()){
            list.add(val);
        }
        
        return list;
    }
    
}
