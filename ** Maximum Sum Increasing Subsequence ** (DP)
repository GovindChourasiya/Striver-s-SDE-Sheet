class Solution
{
    public int solve(int[] arr, int n, int idx, int prev, int[][] dp){
        if(idx == n){
            return 0;
        }
        if(dp[idx][prev+1] != -1){
            return dp[idx][prev+1];
        }
        int unpick = solve(arr,n,idx+1,prev,dp);
        
        int pick = Integer.MIN_VALUE;
        if(prev == -1 || arr[idx] > arr[prev]){
            pick = (arr[idx]+solve(arr,n,idx+1,idx,dp));
        }
        
        return dp[idx][prev+1] = Math.max(pick,unpick);
    }
	public int maxSumIS(int arr[], int n)  
	{  
	    //code here.
	    int[][] dp = new int[n][n+1];
	    for(int a[] : dp){
	        Arrays.fill(a,-1);
	    }
	    return solve(arr,n,0,-1,dp);
	}  
}
