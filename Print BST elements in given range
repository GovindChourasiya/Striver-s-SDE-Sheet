class Solution {
    // Function to return a list of BST elements in a given range.
    public static ArrayList<Integer> printNearNodes(Node root, int low, int high) {
        ArrayList<Integer> list = new ArrayList<>();
        inorderTraversal(root, low, high, list);
        return list;
    }
    
    private static void inorderTraversal(Node root, int low, int high, ArrayList<Integer> list) {
        if (root == null) {
            return;
        }
        
        // Traverse the left subtree
        inorderTraversal(root.left, low, high, list);
        
        // Add root data to list if it's in the range [low, high]
        if (root.data >= low && root.data <= high) {
            list.add(root.data);
        }
        
        // Traverse the right subtree
        inorderTraversal(root.right, low, high, list);
    }
