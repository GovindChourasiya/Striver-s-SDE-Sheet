class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
        ArrayList<Long> list = new ArrayList<>();
        Queue<TreeNode> que = new LinkedList<>();
        que.offer(root);

        while (!que.isEmpty()) {
            int levelSize = que.size(); 
            long sum = 0;

            for (int i = 0; i < levelSize; i++) {
                TreeNode node = que.poll();
                sum += node.val; 

                if (node.left != null) {
                    que.offer(node.left); 
                }
                if (node.right != null) {
                    que.offer(node.right); 
                }
            }

            list.add(sum);
        }

        if(k > list.size()){
            return -1;
        }

        Collections.sort(list, Collections.reverseOrder()); 
        return list.get(k - 1); 
    }
}
