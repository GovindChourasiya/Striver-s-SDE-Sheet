class Solution {
    public int findPath(int i, int j, int[][] grid, int[][] dp){
        if(i == 0 && j == 0){
            return grid[0][0];
        }
        if(i < 0 || j < 0){
            return (int)1e9;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }

        int up = grid[i][j] + findPath(i-1,j,grid,dp);
        int left = grid[i][j] + findPath(i,j-1,grid,dp);

        return dp[i][j] = Math.min(up,left);
    }
    public int minPathSum(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;

        int[][] dp = new int[n][m];
        for(int[] arr : dp){
            Arrays.fill(arr,-1);
        }

        return findPath(n-1,m-1,grid,dp);
    }
}
