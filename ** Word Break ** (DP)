class Solution {
    public boolean solve(int idx, String s, List<String> wordDict, int n, Boolean[] dp){
        if(idx == n){
            return true;
        }
        if(dp[idx] != null){
            return dp[idx];
        }

        for(int i=idx+1;i<=n;i++){
            String str = s.substring(idx,i);
            if(wordDict.contains(str) && solve(i,s,wordDict,n,dp)){
                return dp[idx] = true;
            }
        }
        return dp[idx] = false;
    }
    public boolean wordBreak(String s, List<String> wordDict) {
        int n = s.length();
        Boolean[] dp = new Boolean[n];

        return solve(0,s,wordDict,n,dp);
    }
}
