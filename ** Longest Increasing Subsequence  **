class Solution {
    public int solve(int idx, int prevIdx, int[] nums, int n, int[][] dp){
        if(idx == n){
            return 0;
        }
        if(dp[idx][prevIdx+1] != -1){
            return dp[idx][prevIdx+1];
        }
        int len = 0 + solve(idx+1,prevIdx,nums,n,dp);

        if(prevIdx == -1 || nums[idx] > nums[prevIdx]){
            len = Math.max(len,1+solve(idx+1,idx,nums,n,dp));
        }

        return dp[idx][prevIdx+1] = len;
    }
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n][n+1];
        for(int[] arr : dp){
            Arrays.fill(arr,-1);
        }
        return (solve(0,-1,nums,n,dp));
    }
}
